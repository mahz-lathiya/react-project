{"version":3,"file":"static/js/870.60593bfc.chunk.js","mappings":"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","sources":["components/cards/MiniCardComponent.js","routes/dashboard/TodayTrendsComponent.js","components/cards/CardComponent.js","routes/dashboard/UnresolvedTicketsComponent.js","routes/dashboard/TasksComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"sourcesContent":["import React from 'react';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer',\n        maxWidth: 350,\n        padding: '16px 32px 16px 32px',\n        '&:hover': {\n            borderColor: theme.color.lightBlue,\n            '&:nth-child(n) > span': {\n                color: theme.color.lightBlue\n            }\n        }\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.grayishBlue2,\n        marginBottom: 12,\n        minWidth: 102,\n        textAlign: 'center'\n    },\n    value: {\n        color: theme.color.veryDarkGrayishBlue,\n        fontWeight: 'bold',\n        fontSize: 40,\n        letterSpacing: '1px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    }\n}));\n\nfunction MiniCardComponent({ className = '', title, value }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const composedClassName = [classes.container, className].join(' ');\n    return (\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\n            <span className={classes.title}>{title}</span>\n            <span className={classes.value}>{value}</span>\n        </Column>\n    );\n}\n\nexport default MiniCardComponent;\n","import React from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport LineChart from 'react-svg-line-chart';\n\nconst data = [];\n\nfor (let x = 1; x <= 24; x++) {\n    data.push({ x: x, y: Math.floor(Math.random() * 100) });\n}\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer'\n    },\n    graphContainer: {\n        marginTop: 24,\n        marginLeft: 0,\n        marginRight: 0,\n        width: '100%'\n    },\n    graphSection: {\n        padding: 24\n    },\n    graphSubtitle: {\n        ...theme.typography.smallSubtitle,\n        color: theme.color.grayishBlue2,\n        marginTop: 4,\n        marginRight: 8\n    },\n    graphTitle: {\n        ...theme.typography.cardTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    legendTitle: {\n        ...theme.typography.smallSubtitle,\n        fontWeight: '600',\n        color: theme.color.grayishBlue2,\n        marginLeft: 8\n    },\n    separator: {\n        backgroundColor: theme.color.lightGrayishBlue2,\n        width: 1,\n        minWidth: 1\n    },\n    statContainer: {\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\n        padding: '24px 32px 24px 32px',\n        height: 'calc(114px - 48px)',\n        '&:last-child': {\n            border: 'none'\n        }\n    },\n    stats: {\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\n        width: '100%'\n    },\n    statTitle: {\n        fontWeight: '600',\n        fontSize: 16,\n        lineHeight: '22px',\n        letterSpacing: '0.3px',\n        textAlign: 'center',\n        color: theme.color.grayishBlue2,\n        whiteSpace: 'nowrap',\n        marginBottom: 6\n    },\n    statValue: {\n        ...theme.typography.title,\n        textAlign: 'center',\n        color: theme.color.veryDarkGrayishBlue\n    }\n}));\n\nfunction TodayTrendsComponent() {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n\n    function renderLegend(color, title) {\n        return (\n            <Row vertical='center'>\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\n                <span className={classes.legendTitle}>{title}</span>\n            </Row>\n        );\n    }\n\n    function renderStat(title, value) {\n        return (\n            <Column\n                flexGrow={1}\n                className={classes.statContainer}\n                vertical='center'\n                horizontal='center'\n            >\n                <span className={classes.statTitle}>{title}</span>\n                <span className={classes.statValue}>{value}</span>\n            </Column>\n        );\n    }\n\n    return (\n        <Row\n            flexGrow={1}\n            className={classes.container}\n            horizontal='center'\n            breakpoints={{ 1024: 'column' }}\n        >\n            <Column\n                wrap\n                flexGrow={7}\n                flexBasis='735px'\n                className={classes.graphSection}\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\n            >\n                <Row wrap horizontal='space-between'>\n                    <Column>\n                        <span className={classes.graphTitle}>Today’s trends</span>\n                        <span className={classes.graphSubtitle}>as of 25 May 2019, 09:41 PM</span>\n                    </Column>\n                    {renderLegend(theme.color.lightBlue, 'Today')}\n                </Row>\n                <div className={classes.graphContainer}>\n                    <LineChart\n                        data={data}\n                        viewBoxWidth={500}\n                        pointsStrokeColor={theme.color.lightBlue}\n                        areaColor={theme.color.lightBlue}\n                        areaVisible={true}\n                    />\n                </div>\n            </Column>\n            <Column className={classes.separator} breakpoints={{ 1024: { display: 'none' } }}>\n                <div />\n            </Column>\n            <Column flexGrow={3} flexBasis='342px' breakpoints={{ 1024: classes.stats }}>\n                {renderStat('Resolved', '449')}\n                {renderStat('Received', '426')}\n                {renderStat('Average first response time', '33m')}\n                {renderStat('Average response time', '3h 8m')}\n                {renderStat('Resolution within SLA', '94%')}\n            </Column>\n        </Row>\n    );\n}\n\nexport default TodayTrendsComponent;\n","import React from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        padding: '24px 32px 0px 32px',\n        height: '100%'\n    },\n    containerMobile: {\n        padding: '12px 16px 6px 16px !important'\n    },\n    itemContainer: {\n        marginLeft: -32,\n        marginRight: -32,\n        paddingLeft: 32,\n        paddingRight: 32,\n        paddingBottom: 18,\n        paddingTop: 18,\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\n        '&:last-child': {\n            borderBottom: 'none'\n        }\n    },\n    itemContainerMobile: {\n        marginLeft: -16,\n        marginRight: -16,\n        paddingLeft: 16,\n        paddingRight: 16\n    },\n    link: {\n        ...theme.typography.link\n    },\n    subtitle: {\n        ...theme.typography.smallSubtitle,\n        color: theme.color.grayishBlue2\n    },\n    subtitle2: {\n        color: theme.color.veryDarkGrayishBlue,\n        marginLeft: 2\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.veryDarkGrayishBlue\n    }\n}));\n\nfunction CardComponent(props) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const { title, link, subtitle, subtitleTwo, items, containerStyles } = props;\n    function renderItem(item, index) {\n        return (\n            <Column\n                className={classes.itemContainer}\n                key={`item-${index}`}\n                breakpoints={{ 426: classes.itemContainerMobile }}\n            >\n                {item}\n            </Column>\n        );\n    }\n\n    return (\n        <Column\n            flexGrow={1}\n            className={[classes.container, containerStyles].join(' ')}\n            breakpoints={{ 426: classes.containerMobile }}\n        >\n            <Row horizontal='space-between'>\n                <Column>\n                    <span className={classes.title}>{title}</span>\n                    <Row style={{ marginTop: 8, marginBottom: 16 }}>\n                        <span className={classes.subtitle}>{subtitle}</span>\n                        {subtitleTwo && (\n                            <span className={[classes.subtitle, classes.subtitle2].join(' ')}>\n                                {subtitleTwo}\n                            </span>\n                        )}\n                    </Row>\n                </Column>\n                <span className={classes.link}>{link}</span>\n            </Row>\n            {items.map(renderItem)}\n        </Column>\n    );\n}\n\nexport default CardComponent;\n","import React from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CardComponent from '../../components/cards/CardComponent';\n\nconst useStyles = createUseStyles((theme) => ({\n    itemTitle: {\n        ...theme.typography.itemTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    itemValue: {\n        color: theme.color.grayishBlue2\n    }\n}));\n\nfunction UnresolvedTicketsComponent({ containerStyles }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n\n    function renderStat(title, value) {\n        return (\n            <Row horizontal='space-between' vertical='center'>\n                <span className={classes.itemTitle}>{title}</span>\n                <span className={[classes.itemTitle, classes.itemValue].join(' ')}>{value}</span>\n            </Row>\n        );\n    }\n\n    return (\n        <CardComponent\n            containerStyles={containerStyles}\n            title='Unresolved tickets'\n            link='View details'\n            subtitle='Group:'\n            subtitleTwo='Support'\n            items={[\n                renderStat('Waiting on Feature Request', 4238),\n                renderStat('Awaiting Customer Response', 1005),\n                renderStat('Awaiting Developer Fix', 914),\n                renderStat('Pending', 281)\n            ]}\n        />\n    );\n}\n\nexport default UnresolvedTicketsComponent;\n","import React, { useState } from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconCheckboxOn, IconCheckboxOff } from '../../assets/icons';\nimport CardComponent from '../../components/cards/CardComponent';\n\nconst useStyles = createUseStyles((theme) => ({\n    addButton: {\n        backgroundColor: theme.color.lightGrayishBlue,\n        color: theme.color.grayishBlue2,\n        fontSize: '20px !important',\n        padding: '7px !important'\n    },\n    itemTitle: {\n        ...theme.typography.itemTitle,\n        color: theme.color.veryDarkGrayishBlue\n    },\n    itemValue: {\n        color: theme.color.grayishBlue2\n    },\n    greyTitle: {\n        color: theme.color.grayishBlue3\n    },\n    tagStyles: {\n        borderRadius: 5,\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        fontSize: 11,\n        letterSpacing: '0.5px',\n        lineHeight: '14px',\n        padding: '5px 12px 5px 12px'\n    },\n    checkboxWrapper: {\n        cursor: 'pointer',\n        marginRight: 16\n    }\n}));\n\nconst TAGS = {\n    URGENT: { text: 'URGENT', backgroundColor: '#FEC400', color: '#FFFFFF' },\n    NEW: { text: 'NEW', backgroundColor: '#29CC97', color: '#FFFFFF' },\n    DEFAULT: { text: 'DEFAULT', backgroundColor: '#F0F1F7', color: '#9FA2B4' }\n};\n\nfunction TasksComponent(props) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const [items, setItems] = useState([\n        { title: 'Finish ticket update', checked: false, tag: TAGS.URGENT },\n        {\n            title: 'Create new ticket example',\n            checked: false,\n            tag: TAGS.NEW\n        },\n        { title: 'Update ticket report', checked: true, tag: TAGS.DEFAULT }\n    ]);\n\n    function onCheckboxClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].checked = newItems[index].checked ? false : true;\n            return newItems;\n        });\n    }\n    function getNextTag(current = 'URGENT') {\n        const tagLabels = ['URGENT', 'NEW', 'DEFAULT'];\n        const tagIndex = (tagLabels.indexOf(current) + 1) % 3;\n        return TAGS[tagLabels[tagIndex]];\n    }\n\n    function onTagClick(index) {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems[index].tag = getNextTag(newItems[index].tag.text);\n            return newItems;\n        });\n    }\n\n    function onAddButtonClick() {\n        setItems((prev) => {\n            const newItems = [...prev];\n            newItems.push({\n                title: `Task ${newItems.length + 1}`,\n                checked: false,\n                tag: getNextTag()\n            });\n            return newItems;\n        });\n    }\n\n    function renderAddButton() {\n        return (\n            <Row\n                horizontal='center'\n                vertical='center'\n                className={[classes.tagStyles, classes.addButton].join(' ')}\n                onClick={onAddButtonClick}\n            >\n                +\n            </Row>\n        );\n    }\n\n    return (\n        <CardComponent\n            containerStyles={props.containerStyles}\n            title='Tasks'\n            link='View all'\n            subtitle='Today'\n            items={[\n                <Row horizontal='space-between' vertical='center'>\n                    <span className={[classes.itemTitle, classes.greyTitle].join(' ')}>\n                        Create new task\n                    </span>\n                    {renderAddButton()}\n                </Row>,\n                ...items.map((item, index) => (\n                    <TaskComponent\n                        classes={classes}\n                        index={index}\n                        item={item}\n                        onCheckboxClick={onCheckboxClick}\n                        onTagClick={onTagClick}\n                    />\n                ))\n            ]}\n        />\n    );\n}\n\nfunction TaskComponent({ classes, index, item = {}, onCheckboxClick, onTagClick }) {\n    const { tag = {} } = item;\n    return (\n        <Row horizontal='space-between' vertical='center'>\n            <Row>\n                <div className={classes.checkboxWrapper} onClick={() => onCheckboxClick(index)}>\n                    {item.checked ? <IconCheckboxOn /> : <IconCheckboxOff />}\n                </div>\n                <span className={classes.itemTitle}>{item.title}</span>\n            </Row>\n            <TagComponent\n                backgroundColor={tag.backgroundColor}\n                classes={classes}\n                color={tag.color}\n                index={index}\n                onClick={onTagClick}\n                text={tag.text}\n            />\n        </Row>\n    );\n}\n\nfunction TagComponent({ backgroundColor, classes, color, index, onClick, text }) {\n    return (\n        <Row\n            horizontal='center'\n            vertical='center'\n            style={{ backgroundColor, color }}\n            className={classes.tagStyles}\n            onClick={() => onClick(index)}\n        >\n            {text}\n        </Row>\n    );\n}\n\nexport default TasksComponent;\n","import React from 'react';\n import { Column, Row } from 'simple-flexbox';\nimport { createUseStyles } from 'react-jss';\nimport MiniCardComponent from '../../components/cards/MiniCardComponent';\nimport TodayTrendsComponent from './TodayTrendsComponent';\nimport UnresolvedTicketsComponent from './UnresolvedTicketsComponent';\nimport TasksComponent from './TasksComponent';\n\nconst useStyles = createUseStyles({\n    cardsContainer: {\n        marginRight: -30,\n        marginTop: -30\n    },\n    cardRow: {\n        marginTop: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 0\n        }\n    },\n    miniCardContainer: {\n        flexGrow: 1,\n        marginRight: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 30,\n            maxWidth: 'none'\n        }\n    },\n    todayTrends: {\n        marginTop: 30\n    },\n    lastRow: {\n        marginTop: 30\n    },\n    unresolvedTickets: {\n        marginRight: 30,\n        '@media (max-width: 1024px)': {\n            marginRight: 0\n        }\n    },\n    tasks: {\n        marginTop: 0,\n        '@media (max-width: 1024px)': {\n            marginTop: 30\n        }\n    }\n});\n\nfunction DashboardComponent() {\n    const classes = useStyles();\n    return (\n        <Column>\n            <Row\n                className={classes.cardsContainer}\n                wrap\n                flexGrow={1}\n                horizontal='space-between'\n                breakpoints={{ 768: 'column' }}\n            >\n                <Row\n                    className={classes.cardRow}\n                    wrap\n                    flexGrow={1}\n                    horizontal='space-between'\n                    breakpoints={{ 384: 'column' }}\n                >\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Unresolved'\n                        value='60'\n                    />\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Overdue'\n                        value='16'\n                    />\n                </Row>\n                <Row\n                    className={classes.cardRow}\n                    wrap\n                    flexGrow={1}\n                    horizontal='space-between'\n                    breakpoints={{ 384: 'column' }}\n                >\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Open'\n                        value='43'\n                    />\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='On hold'\n                        value='64'\n                    />\n                </Row>\n            </Row>\n            <div className={classes.todayTrends}>\n                <TodayTrendsComponent />\n            </div>\n            <Row\n                horizontal='space-between'\n                className={classes.lastRow}\n                breakpoints={{ 1024: 'column' }}\n            >\n                <UnresolvedTicketsComponent containerStyles={classes.unresolvedTickets} />\n                <TasksComponent containerStyles={classes.tasks} />\n            </Row>\n        </Column>\n    );\n}\n\nexport default DashboardComponent;\n","import DashboardComponent from './DashboardComponent';\n\nexport default DashboardComponent;\n"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","concat","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","_ref","className","useTheme","classes","composedClassName","join","_jsxs","Column","flexGrow","horizontal","vertical","children","_jsx","data","x","push","y","Math","floor","random","graphContainer","marginTop","marginLeft","marginRight","width","graphSection","graphSubtitle","smallSubtitle","graphTitle","legendTitle","separator","statContainer","borderBottom","height","stats","borderTop","statTitle","whiteSpace","statValue","renderStat","Row","breakpoints","wrap","flexBasis","style","LineChart","viewBoxWidth","pointsStrokeColor","areaColor","areaVisible","display","containerMobile","itemContainer","paddingLeft","paddingRight","paddingBottom","paddingTop","itemContainerMobile","link","subtitle","subtitle2","props","subtitleTwo","items","containerStyles","map","item","index","itemTitle","itemValue","CardComponent","addButton","lightGrayishBlue","greyTitle","grayishBlue3","tagStyles","checkboxWrapper","TAGS","URGENT","text","NEW","DEFAULT","TaskComponent","onCheckboxClick","onTagClick","tag","onClick","checked","IconCheckboxOn","IconCheckboxOff","TagComponent","_ref2","setItems","useState","prev","newItems","getNextTag","current","arguments","length","undefined","tagLabels","tagIndex","indexOf","onAddButtonClick","cardsContainer","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","MiniCardComponent","TodayTrendsComponent","UnresolvedTicketsComponent","TasksComponent"],"sourceRoot":""}